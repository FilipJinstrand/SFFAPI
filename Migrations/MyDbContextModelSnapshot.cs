// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFFAPI.Context;

namespace SFFAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("SFFAPI.Models.LoanedMovie", b =>
                {
                    b.Property<int>("LoanedMovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieStudioModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoanedMovieId");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieStudioModelId");

                    b.ToTable("LoanedMovies");
                });

            modelBuilder.Entity("SFFAPI.Models.MovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("SFFAPI.Models.MovieStudioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MovieStudios");
                });

            modelBuilder.Entity("SFFAPI.Models.TriviaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoveStudioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieStudioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TriviaContent")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieStudioId");

                    b.ToTable("Trivias");
                });

            modelBuilder.Entity("SFFAPI.Models.LoanedMovie", b =>
                {
                    b.HasOne("SFFAPI.Models.MovieModel", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFFAPI.Models.MovieStudioModel", null)
                        .WithMany("LoanedMovies")
                        .HasForeignKey("MovieStudioModelId");
                });

            modelBuilder.Entity("SFFAPI.Models.TriviaModel", b =>
                {
                    b.HasOne("SFFAPI.Models.MovieModel", "Movie")
                        .WithMany("Trivias")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFFAPI.Models.MovieStudioModel", "MovieStudio")
                        .WithMany()
                        .HasForeignKey("MovieStudioId");
                });
#pragma warning restore 612, 618
        }
    }
}
